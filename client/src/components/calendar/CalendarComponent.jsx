import React, { useState, useEffect } from "react";
import Calendar from "react-calendar";
import "react-calendar/dist/Calendar.css";
import "./calendarComponent.css";

export const CalendarComponent = () => {
    const [date, setDate] = useState(new Date()); // –•—Ä–∞–Ω–∏—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É
    const [events, setEvents] = useState([]); // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π
    const [isCalendarVisible, setIsCalendarVisible] = useState(false); // –í–∏–¥–∏–º–æ—Å—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—è

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π –∏–∑ localStorage –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
    useEffect(() => {
        const savedEvents = JSON.parse(localStorage.getItem("calendar-events") || "[]");
        setEvents(savedEvents);
    }, []);

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –≤ localStorage –ø—Ä–∏ –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    useEffect(() => {
        localStorage.setItem("calendar-events", JSON.stringify(events));
    }, [events]);

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    const handleAddEvent = () => {
        const eventTitle = prompt("Enter event title:");
        if (eventTitle && eventTitle.trim() !== "") {
            const newEvent = { date: date.toDateString(), title: eventTitle.trim() };
            setEvents((prevEvents) => [...prevEvents, newEvent]);
        }
    };

    // –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
    const handleDeleteEvent = (eventToDelete) => {
        const updatedEvents = events.filter((event) => JSON.stringify(event) !== JSON.stringify(eventToDelete));
        setEvents(updatedEvents);
    };

    // –°–æ–±—ã—Ç–∏—è –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–Ω—è
    const eventsForDay = events.filter((event) => event.date === date.toDateString());

    // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –¥–Ω–µ–π —Å —Å–æ–±—ã—Ç–∏—è–º–∏
    const addClassToEvents = ({ date, view }) => {
        if (view === "month") {
            const eventDay = events.some((event) => event.date === date.toDateString());
            return eventDay ? "highlight-day" : null;
        }
    };

    return (
        <div className="calendar-wrapper">
            {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è */}
            <button
                className="calendar-icon-btn"
                onClick={() => setIsCalendarVisible(!isCalendarVisible)}
            >
                üìÖ
            </button>

            {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å */}
            {isCalendarVisible && (
                <div className="calendar-container">
                    <Calendar
                        onChange={(selectedDate) => setDate(selectedDate)} // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É
                        value={date}
                        locale="en-US"
                        tileClassName={addClassToEvents} // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É
                    />

                    {/* –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ */}
                    <button className="add-event-btn" onClick={handleAddEvent}>
                        +
                    </button>

                    {/* –°–æ–±—ã—Ç–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–Ω—è */}
                    <div>
                        <h3>Events for {date.toDateString()}:</h3>
                        {eventsForDay.length > 0 ? (
                            <ul className="events-list">
                                {eventsForDay.map((event, i) => (
                                    <li key={i}>
                                        {event.title}
                                        <button
                                            className="delete-event-btn"
                                            onClick={() => handleDeleteEvent(event)}
                                        >
                                            üóë
                                        </button>
                                    </li>
                                ))}
                            </ul>
                        ) : (
                            <p>No events for this day</p>
                        )}
                    </div>

                    {/* –û–±—â–∏–π —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π */}
                    {events.length > 0 && (
                        <div className="all-events-container">
                            <h3>All Events:</h3>
                            <ul className="all-events-list">
                                {events.map((event, i) => (
                                    <li key={i}>
                                        <strong>{event.date}</strong>: {event.title}
                                        <button
                                            className="delete-event-btn"
                                            onClick={() => handleDeleteEvent(event)}
                                        >
                                            üóë
                                        </button>
                                    </li>
                                ))}
                            </ul>
                        </div>
                    )}
                </div>
            )}
        </div>
    );
};